pipeline {
    agent any
   
    stages {
        stage('Create web directory')
        {
            input {
              message 'Enter the data'
              parameters {
                    string(name:'AUTHOR', defaultValue: 'Lucas', description: 'Author of the web application deployment ')
                    string(name:'ENVIRONMENT', defaultValue: 'Development',description: 'Environment to deploy')
                 }
            }
            steps{
                echo "The responsible of this project is ${AUTHOR} and and will be deployed in ${ENVIRONMENT}"
                //Fisrt, drop the directory if exists
                sh 'rm -rf /var/jenkins_home/webLucas'
                //Create the directory
                sh 'mkdir /var/jenkins_home/webLucas'
                
            }
        }
        stage('Drop the Apache HTTPD Docker container'){
            steps {
            echo 'droping the container...'
            sh 'docker rm -f apache1'
            }
        }
        stage('Create the Apache httpd container') {
            steps {
            echo 'Creating the container...'
            sh 'docker run -dit --name apache1 -p 9001:80  -v /home/lmcomerci/datos_jenkins/webLucas:/usr/local/apache2/htdocs/ httpd'
            }
        }
        stage('Copy the web application to the container directory') {
            steps {
                echo 'Copying web application...'             
                sh 'cp -r web/* /var/jenkins_home/webLucas'
            }
        }
        stage('Checking the app') {
            steps {
                echo 'Testing the web app'
                //sh 'wget http://localhost:9001'
                // no tengo instalado wget, pero tampoco sirve demasiado
                //slackSend color: "good", message: "✅ Mensaje de prueba enviado desde un Pipeline"
            }
        }       
    }
    post {
      success {
        echo 'El deployment ha funcionado correctamente.'
        slackSend color: "good", message: "✅ El deployment ha sido exitoso."
      }
      failure {
         echo 'Se ha producido un error.'
         slackSend color: "danger", message: "❌ El deployment ha fallado. Revisa los logs para más detalles."

      }
    }

}